image: python:3.8-buster

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  GIT_DEPTH: 1  
  BRANCH_NAME: "${CI_COMMIT_REF_NAME}_temp88"              # Name of the branch to modify
  BOT_NAME: "GitLab Runner Bot"              # Bot's name that appears in the commit log
  BOT_EMAIL: "gitlab-runner-bot@example.net" # Bot's email, not important
  COMMIT_MESSAGE: "Commit from runner "      # Part of the commit message

.push_convert: &push_convert |
  lines=$(git diff --cached | wc -l)
  if [ $lines -gt 0 ]; then
    echo "commiting"
    git commit -m 'convert whitelists'
    echo "git push $BRANCH_NAME"
    git push -o ci.skip "https://whatever:${GIT_PUSH_TOKEN}@${CI_REPOSITORY_URL#*@}" $BRANCH_NAME
  else
    echo "nothing to commit"
  fi

.push_merge: &push_merge |
  lines=$(git ls-remote --heads "https://whatever:${GIT_PUSH_TOKEN}@${CI_REPOSITORY_URL#*@}" $BRANCH_NAME | wc -l)
  if [ $lines -gt 0 ]; then
    git checkout $CI_COMMIT_REF_NAME
    git merge --allow-unrelated-histories origin/$BRANCH_NAME --strategy-option theirs
    echo "merge branches"
    git push -o ci.skip "https://whatever:${GIT_PUSH_TOKEN}@${CI_REPOSITORY_URL#*@}" $CI_COMMIT_REF_NAME
  else
    echo "nothing to commit"
  fi

.remove_branches: &remove_branches |
  lines=$(git branch | grep -w $BRANCH_NAME | wc -l)
  if [ $lines -gt 0 ]; then
    echo "remove local branch"
    git branch -D $BRANCH_NAME
  else
    echo "no local branch to delete"
  fi
  lines=$(git branch -r | grep -w "origin/$BRANCH_NAME" | wc -l)
  if [ $lines -gt 0 ]; then
    echo "remove remote branch"
    git push "https://whatever:${GIT_PUSH_TOKEN}@${CI_REPOSITORY_URL#*@}" --delete $BRANCH_NAME
  else
    echo "no remote branch to delete"
  fi
  

before_script:
  - pip install -r requirements.txt

stages:    
  - remove     
  - test
  - convert
  - merge
  - remove
  
test_whitelists:
  stage: test
  script:
    - test/test_whitelists.py

convert_whitelists:
  stage: convert
  script:
    - test/update_department.py -d "${MANAGEMENT_API_DOMAIN}" -id "${MANAGEMENT_API_CLIENTID}" -s "${MANAGEMENT_API_SECRET}"
    - misc/convert.py
    - git config --global user.name "${BOT_NAME}"
    - git config --global user.email "${BOT_EMAIL}"
    - git checkout -b $BRANCH_NAME
    - git add whitelists/department
    - git add misc/json
    - *push_convert
  except:
    - main
    

merge_branch:
  stage: merge
  script:
    - git fetch
    - git config --global user.name "${BOT_NAME}"
    - git config --global user.email "${BOT_EMAIL}"
    - *push_merge
  except:
    - main

remove_branch:
  stage: remove
  script:
    - *remove_branches
  except:
    - main